import random


class Hero:
    """
    –ö–ª–∞—Å—Å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –≥–µ—Ä–æ—è –≤ –∏–≥—Ä–µ "–ë–∏—Ç–≤–∞ –≥–µ—Ä–æ–µ–≤".

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        name (str): –ò–º—è –≥–µ—Ä–æ—è.
        health (int): –ó–¥–æ—Ä–æ–≤—å–µ –≥–µ—Ä–æ—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100).
        attack_power (int): –°–∏–ª–∞ –∞—Ç–∞–∫–∏ –≥–µ—Ä–æ—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20).
    """

    def __init__(self, name):
        self.name = name
        self.health = 100
        self.attack_power = 20

    def attack(self, other):
        """
        –ê—Ç–∞–∫—É–µ—Ç –¥—Ä—É–≥–æ–≥–æ –≥–µ—Ä–æ—è, –Ω–∞–Ω–æ—Å—è —É—Ä–æ–Ω.

        Args:
            other (Hero): –ì–µ—Ä–æ–π, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∞–µ—Ç —É—Ä–æ–Ω.
        """
        other.health -= self.attack_power
        print(f"{self.name} –∞—Ç–∞–∫–æ–≤–∞–ª {other.name}. –£ {other.name} –æ—Å—Ç–∞–ª–æ—Å—å {max(0, other.health)} –∑–¥–æ—Ä–æ–≤—å—è.")

    def is_alive(self):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∂–∏–≤ –ª–∏ –≥–µ—Ä–æ–π.

        Returns:
            bool: True, –µ—Å–ª–∏ –∑–¥–æ—Ä–æ–≤—å–µ > 0, –∏–Ω–∞—á–µ False.
        """
        return self.health > 0


class Game:
    """
    –ö–ª–∞—Å—Å, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –∏–≥—Ä–æ–≤—ã–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        player (Hero): –ò–≥—Ä–æ–∫.
        computer (Hero): –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–π –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫.
    """

    def __init__(self, player_name):
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤
        self.player = Hero(player_name)
        self.computer = Hero("–ö–æ–º–ø—å—é—Ç–µ—Ä")

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        self.computer.health = random.randint(80, 120)
        self.computer.attack_power = random.randint(15, 25)

    def start(self):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã. –í–µ–¥—ë—Ç —Ä–∞—É–Ω–¥—ã –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –æ–±–∞ –≥–µ—Ä–æ—è –∂–∏–≤—ã."""
        print("=== –ò–ì–†–ê –ù–ê–ß–ê–õ–ê–°–¨ ===")
        print(f"–ò–≥—Ä–æ–∫: {self.player.name}, –∑–¥–æ—Ä–æ–≤—å–µ: {self.player.health}, —Å–∏–ª–∞ –∞—Ç–∞–∫–∏: {self.player.attack_power}")
        print(
            f"–ö–æ–º–ø—å—é—Ç–µ—Ä: {self.computer.name}, –∑–¥–æ—Ä–æ–≤—å–µ: {self.computer.health}, —Å–∏–ª–∞ –∞—Ç–∞–∫–∏: {self.computer.attack_power}\n")

        round_number = 1

        while self.player.is_alive() and self.computer.is_alive():
            print(f"\n==== –†–∞—É–Ω–¥ {round_number} ====")
            # –•–æ–¥ –∏–≥—Ä–æ–∫–∞
            self.player.attack(self.computer)

            if not self.computer.is_alive():
                print(f"\nüéâ –ü–æ–±–µ–¥–∞! {self.player.name} –æ–¥–µ—Ä–∂–∞–ª –ø–æ–±–µ–¥—É –Ω–∞–¥ {self.computer.name}!")
                break

            # –•–æ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
            self.computer.attack(self.player)

            if not self.player.is_alive():
                print(f"\nüíÄ –ü—Ä–æ–∏–≥—Ä—ã—à! {self.player.name} –±—ã–ª –ø–æ–≤–µ—Ä–∂–µ–Ω {self.computer.name}.")

            round_number += 1


def run_tests():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏–≥—Ä—ã."""
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ó–õ–ò–ß–ù–´–• –°–¶–ï–ù–ê–†–ò–ï–í ===\n")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ò–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–º —Ö–æ–¥—É
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 1: –ò–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–º —Ö–æ–¥—É")
    player = Hero("–ò–≥—Ä–æ–∫")
    computer = Hero("–ö–æ–º–ø—å—é—Ç–µ—Ä")
    computer.health = 10  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ, —á—Ç–æ–±—ã –∏–≥—Ä–æ–∫ –º–æ–≥ –ø–æ–±–µ–¥–∏—Ç—å –∑–∞ –æ–¥–∏–Ω —É–¥–∞—Ä
    print(f"–î–æ –∞—Ç–∞–∫–∏: {computer.health} –∑–¥–æ—Ä–æ–≤—å—è")
    player.attack(computer)
    assert not computer.is_alive()
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω\n")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–º —Ö–æ–¥—É
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 2: –ö–æ–º–ø—å—é—Ç–µ—Ä –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–º —Ö–æ–¥—É")
    player = Hero("–ò–≥—Ä–æ–∫")
    player.health = 10  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ, —á—Ç–æ–±—ã –∫–æ–º–ø—å—é—Ç–µ—Ä –º–æ–≥ –ø–æ–±–µ–¥–∏—Ç—å –∑–∞ –æ–¥–∏–Ω —É–¥–∞—Ä
    computer = Hero("–ö–æ–º–ø—å—é—Ç–µ—Ä")
    computer.attack(player)
    assert not player.is_alive()
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω\n")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ò–≥—Ä–∞ –¥–ª–∏—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 3: –ò–≥—Ä–∞ –¥–ª–∏—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞—É–Ω–¥–æ–≤")
    player = Hero("–ò–≥—Ä–æ–∫")
    computer = Hero("–ö–æ–º–ø—å—é—Ç–µ—Ä")
    player.health = 60
    computer.health = 60
    rounds = 0
    while player.is_alive() and computer.is_alive():
        player.attack(computer)
        if not computer.is_alive():
            break
        computer.attack(player)
        rounds += 1
    assert rounds >= 2
    print(f"–ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞—Å—å {rounds + 1} —Ä–∞—É–Ω–¥–æ–≤. ‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω\n")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ì–µ—Ä–æ–π –ø–æ–ª—É—á–∞–µ—Ç –Ω—É–ª–µ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 4: –ì–µ—Ä–æ–π –ø–æ–ª—É—á–∞–µ—Ç –Ω—É–ª–µ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ")
    hero = Hero("–ì–µ—Ä–æ–π")
    hero.health = 20
    enemy = Hero("–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫")
    enemy.attack_power = 20
    enemy.attack(hero)
    assert hero.health == 0
    assert not hero.is_alive()
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω\n")

    # –°—Ü–µ–Ω–∞—Ä–∏–π 5: –£ –≥–µ—Ä–æ—è —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ —Ä–∞–≤–Ω–∞ 0
    print("–°—Ü–µ–Ω–∞—Ä–∏–π 5: –£ –≥–µ—Ä–æ—è —Å–∏–ª–∞ –∞—Ç–∞–∫–∏ —Ä–∞–≤–Ω–∞ 0")
    hero = Hero("–ì–µ—Ä–æ–π")
    hero.attack_power = 0
    enemy = Hero("–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫")
    hero.attack(enemy)
    assert enemy.health == 100
    print("‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω\n")


if __name__ == "__main__":
    run_tests()
